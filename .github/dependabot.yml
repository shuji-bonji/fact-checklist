name: Build and Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check

      - name: Run tests (if available)
        run: npm test --if-present

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        if: matrix.node-version == 20 # Only upload from one Node.js version
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build/
          retention-days: 1

  # Lighthouse CI job
  lighthouse:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: build/

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # Security audit job (non-blocking)
  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit report
        run: |
          echo "üîí Running security audit (informational only)..."
          npm audit || echo "Vulnerabilities detected - see report above"
          echo "‚úÖ Security audit completed (non-blocking)"
        continue-on-error: true

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, security]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          NODE_ENV: production
          GITHUB_PAGES: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Performance monitoring job (simplified)
  performance:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Basic connectivity test
        run: |
          echo "üåê Testing site connectivity..."
          curl -f -s -o /dev/null https://shuji-bonji.github.io/fact-checklist/ || echo "Site may not be ready yet"
          echo "‚úÖ Basic connectivity test completed"
        continue-on-error: true

  # Notify deployment status
  notify:
    runs-on: ubuntu-latest
    needs: [deploy, performance]
    if: always() && github.ref == 'refs/heads/main'

    steps:
      - name: Notify deployment success
        if: needs.deploy.result == 'success' && needs.performance.result == 'success'
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåê Site URL: https://shuji-bonji.github.io/fact-checklist/"

      - name: Notify deployment failure
        if: needs.deploy.result == 'failure' || needs.performance.result == 'failure'
        run: |
          echo "‚ùå Deployment or performance check failed"
          exit 1
