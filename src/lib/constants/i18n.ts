// src/lib/constants/i18n.ts
// ÂõΩÈöõÂåñÈñ¢ÈÄ£„ÅÆÂÆöÊï∞„ÉªË®≠ÂÆö

/**
 * „Çµ„Éù„Éº„ÉàË®ÄË™ûË®≠ÂÆö
 */
export const SUPPORTED_LANGUAGES = {
  JA: { code: 'ja', name: 'Japanese', nativeName: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ', rtl: false, script: 'cjk' },
  EN: {
    code: 'en',
    name: 'English',
    nativeName: 'English',
    flag: 'üá∫üá∏',
    rtl: false,
    script: 'latin'
  },
  FR: {
    code: 'fr',
    name: 'French',
    nativeName: 'Fran√ßais',
    flag: 'üá´üá∑',
    rtl: false,
    script: 'latin'
  },
  ZH_TW: {
    code: 'zh-TW',
    name: 'Traditional Chinese',
    nativeName: 'ÁπÅÈ´î‰∏≠Êñá',
    flag: 'üáπüáº',
    rtl: false,
    script: 'cjk'
  },
  ES: {
    code: 'es',
    name: 'Spanish',
    nativeName: 'Espa√±ol',
    flag: 'üá™üá∏',
    rtl: false,
    script: 'latin'
  },
  PT: {
    code: 'pt',
    name: 'Portuguese',
    nativeName: 'Portugu√™s',
    flag: 'üáµüáπ',
    rtl: false,
    script: 'latin'
  },
  HI: {
    code: 'hi',
    name: 'Hindi',
    nativeName: '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä',
    flag: 'üáÆüá≥',
    rtl: false,
    script: 'devanagari'
  },
  DE: {
    code: 'de',
    name: 'German',
    nativeName: 'Deutsch',
    flag: 'üá©üá™',
    rtl: false,
    script: 'latin'
  },
  IT: {
    code: 'it',
    name: 'Italian',
    nativeName: 'Italiano',
    flag: 'üáÆüáπ',
    rtl: false,
    script: 'latin'
  },
  AR: {
    code: 'ar',
    name: 'Arabic',
    nativeName: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©',
    flag: 'üá∏üá¶',
    rtl: true,
    script: 'arabic'
  },
  ID: {
    code: 'id',
    name: 'Indonesian',
    nativeName: 'Bahasa Indonesia',
    flag: 'üáÆüá©',
    rtl: false,
    script: 'latin'
  },
  KO: { code: 'ko', name: 'Korean', nativeName: 'ÌïúÍµ≠Ïñ¥', flag: 'üá∞üá∑', rtl: false, script: 'cjk' }
} as const;

/**
 * Ë®ÄË™û„Ç≥„Éº„ÉâÈÖçÂàó
 */
export const LANGUAGE_CODES = Object.values(SUPPORTED_LANGUAGES).map(lang => lang.code);

/**
 * „Éá„Éï„Ç©„É´„ÉàË®ÄË™ûË®≠ÂÆö
 */
export const DEFAULT_LANGUAGE = 'ja';
export const FALLBACK_LANGUAGE = 'en';

/**
 * ÊñáÂ≠ó‰ΩìÁ≥ªÂàÜÈ°û
 */
export const SCRIPT_FAMILIES = {
  LATIN: ['en', 'fr', 'es', 'pt', 'de', 'it', 'id'],
  CJK: ['ja', 'zh-TW', 'ko'],
  ARABIC: ['ar'],
  DEVANAGARI: ['hi']
} as const;

/**
 * RTLÔºàÂè≥„Åã„ÇâÂ∑¶ÔºâË®ÄË™û
 */
export const RTL_LANGUAGES = ['ar'];

/**
 * Êó•‰ªò„Éï„Ç©„Éº„Éû„ÉÉ„ÉàË®≠ÂÆö
 */
export const DATE_FORMATS = {
  ja: {
    dateStyle: 'long' as const,
    timeStyle: 'short' as const,
    calendar: 'gregory' as const
  },
  en: {
    dateStyle: 'long' as const,
    timeStyle: 'short' as const,
    calendar: 'gregory' as const
  },
  ar: {
    dateStyle: 'long' as const,
    timeStyle: 'short' as const,
    calendar: 'islamic' as const,
    numberingSystem: 'arab' as const
  },
  hi: {
    dateStyle: 'long' as const,
    timeStyle: 'short' as const,
    calendar: 'gregory' as const,
    numberingSystem: 'deva' as const
  }
} as const;

/**
 * Êï∞ÂÄ§„Éï„Ç©„Éº„Éû„ÉÉ„ÉàË®≠ÂÆö
 */
export const NUMBER_FORMATS = {
  ja: {
    style: 'decimal' as const,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2
  },
  en: {
    style: 'decimal' as const,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2
  },
  ar: {
    style: 'decimal' as const,
    numberingSystem: 'arab' as const,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2
  },
  hi: {
    style: 'decimal' as const,
    numberingSystem: 'deva' as const,
    minimumFractionDigits: 0,
    maximumFractionDigits: 2
  }
} as const;

/**
 * „Éï„Ç©„É≥„ÉàË®≠ÂÆöÔºàPDFÁîüÊàêÁî®Ôºâ
 */
export const I18N_FONTS = {
  LATIN: {
    name: 'Roboto',
    files: {
      normal: 'Roboto-Regular.ttf',
      bold: 'Roboto-Bold.ttf',
      italic: 'Roboto-Italic.ttf'
    }
  },
  CJK: {
    name: 'NotoSansCJK',
    files: {
      normal: 'NotoSansCJK-Regular.ttf',
      bold: 'NotoSansCJK-Bold.ttf'
    }
  },
  ARABIC: {
    name: 'NotoSansArabic',
    files: {
      normal: 'NotoSansArabic-Regular.ttf',
      bold: 'NotoSansArabic-Bold.ttf'
    }
  },
  DEVANAGARI: {
    name: 'NotoSansDevanagari',
    files: {
      normal: 'NotoSansDevanagari-Regular.ttf',
      bold: 'NotoSansDevanagari-Bold.ttf'
    }
  }
} as const;

/**
 * ÁøªË®≥„Ç≠„ÉºË®≠ÂÆö
 */
export const TRANSLATION_NAMESPACES = {
  APP: 'app',
  NAVIGATION: 'navigation',
  CHECKLIST: 'checklist',
  EXPORT: 'export',
  FORMS: 'forms',
  UI: 'ui',
  ERRORS: 'errors',
  DATETIME: 'datetime',
  ACCESSIBILITY: 'accessibility',
  INTRO: 'intro',
  PAGES: 'pages'
} as const;

/**
 * Ë®ÄË™ûÊ§úÂá∫Ë®≠ÂÆö
 */
export const LANGUAGE_DETECTION = {
  BROWSER_LANGUAGE: true,
  LOCAL_STORAGE_KEY: 'fact-checklist-language',
  URL_PARAMETER: 'lang',
  COOKIE_NAME: 'language',
  FALLBACK_CHAIN: ['ja', 'en'],
  AUTO_DETECT: true
} as const;

/**
 * ÁøªË®≥„É≠„Éº„Éá„Ç£„É≥„Ç∞Ë®≠ÂÆö
 */
export const TRANSLATION_LOADING = {
  LAZY_LOAD: true,
  CACHE_TRANSLATIONS: true,
  MAX_CACHE_SIZE: 10,
  CACHE_DURATION: 24 * 60 * 60 * 1000, // 24ÊôÇÈñì
  RETRY_ATTEMPTS: 3,
  RETRY_DELAY: 1000
} as const;

/**
 * Ë§áÊï∞ÂΩ¢„É´„Éº„É´
 */
export const PLURALIZATION_RULES = {
  en: (n: number) => (n === 1 ? 0 : 1),
  ja: () => 0, // Êó•Êú¨Ë™û„ÅØË§áÊï∞ÂΩ¢„Å™„Åó
  fr: (n: number) => (n === 0 || n === 1 ? 0 : 1),
  ar: (n: number) => {
    if (n === 0) return 0;
    if (n === 1) return 1;
    if (n === 2) return 2;
    if (n >= 3 && n <= 10) return 3;
    if (n >= 11 && n <= 99) return 4;
    return 5;
  },
  hi: (n: number) => (n === 1 ? 0 : 1)
} as const;

/**
 * Ë®ÄË™ûÂõ∫Êúâ„ÅÆË®≠ÂÆö
 */
export const LANGUAGE_SPECIFIC_SETTINGS = {
  ar: {
    direction: 'rtl',
    textAlign: 'right',
    fontFamily: 'Noto Sans Arabic',
    lineHeight: 1.8
  },
  hi: {
    direction: 'ltr',
    textAlign: 'left',
    fontFamily: 'Noto Sans Devanagari',
    lineHeight: 1.7
  },
  ja: {
    direction: 'ltr',
    textAlign: 'left',
    fontFamily: 'Noto Sans CJK JP',
    lineHeight: 1.8
  },
  'zh-TW': {
    direction: 'ltr',
    textAlign: 'left',
    fontFamily: 'Noto Sans CJK TC',
    lineHeight: 1.8
  },
  ko: {
    direction: 'ltr',
    textAlign: 'left',
    fontFamily: 'Noto Sans CJK KR',
    lineHeight: 1.7
  }
} as const;

/**
 * ÊñáÂ≠ó„Ç®„É≥„Ç≥„Éº„Éá„Ç£„É≥„Ç∞Ë®≠ÂÆö
 */
export const TEXT_ENCODING = {
  DEFAULT: 'UTF-8',
  BOM_REQUIRED: false,
  NORMALIZE_FORM: 'NFC' as const,
  PRESERVE_WHITESPACE: false
} as const;
